{"ast":null,"code":"import axios from 'axios';\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL } from '../types';\nexport const listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const listProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/jason/code/e-store/frontend/src/redux/actions/productActions.js"],"names":["axios","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","listProducts","dispatch","type","data","get","payload","err","response","message","listProductDetails","id","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACCC,oBADD,EAECC,oBAFD,EAGCC,iBAHD,EAICC,uBAJD,EAKCC,uBALD,EAMCC,oBAND,QAOO,UAPP;AASA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACnD,MAAI;AACHA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AAEA,UAAM;AAAES,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,GAAN,CAAU,eAAV,CAAvB;AACAH,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAEP,oBADE;AAERU,MAAAA,OAAO,EAAEF;AAFD,KAAD,CAAR;AAIA,GARD,CAQE,OAAOG,GAAP,EAAY;AACbL,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAEN,iBADE;AAERS,MAAAA,OAAO,EACNC,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAaJ,IAAb,CAAkBK,OAAlC,GACGF,GAAG,CAACC,QAAJ,CAAaJ,IAAb,CAAkBK,OADrB,GAEGF,GAAG,CAACE;AALA,KAAD,CAAR;AAOA;AACD,CAlBM;AAoBP,OAAO,MAAMC,kBAAkB,GAAGC,EAAE,IAAI,MAAMT,QAAN,IAAkB;AACzD,MAAI;AACHA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,GAAN,CAAW,iBAAgBM,EAAG,EAA9B,CAAvB;AAEAT,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAEJ,uBADE;AAERO,MAAAA,OAAO,EAAEF;AAFD,KAAD,CAAR;AAIA,GATD,CASE,OAAOQ,KAAP,EAAc;AACfV,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAEH,oBADE;AAERM,MAAAA,OAAO,EACNM,KAAK,CAACJ,QAAN,IAAkBI,KAAK,CAACJ,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACGG,KAAK,CAACJ,QAAN,CAAeJ,IAAf,CAAoBK,OADvB,GAEGG,KAAK,CAACH;AALF,KAAD,CAAR;AAOA;AACD,CAnBM","sourcesContent":["import axios from 'axios'\r\nimport {\r\n\tPRODUCT_LIST_REQUEST,\r\n\tPRODUCT_LIST_SUCCESS,\r\n\tPRODUCT_LIST_FAIL,\r\n\tPRODUCT_DETAILS_REQUEST,\r\n\tPRODUCT_DETAILS_SUCCESS,\r\n\tPRODUCT_DETAILS_FAIL,\r\n} from '../types'\r\n\r\nexport const listProducts = () => async dispatch => {\r\n\ttry {\r\n\t\tdispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n\t\tconst { data } = await axios.get('/api/products')\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_LIST_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t})\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_LIST_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terr.response && err.response.data.message\r\n\t\t\t\t\t? err.response.data.message\r\n\t\t\t\t\t: err.message,\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const listProductDetails = id => async dispatch => {\r\n\ttry {\r\n\t\tdispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n\t\tconst { data } = await axios.get(`/api/products/${id}`)\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_DETAILS_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t})\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_DETAILS_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t})\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}